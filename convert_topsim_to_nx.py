# -*- coding: utf-8 -*-
"""
Created on Fri Mar 23 15:44:35 2018

@author: oem
"""

# read pymn result and bulid a graph

import networkx as nx
import re
import matplotlib.pyplot as plt
import jains as js


def get_graph_from_topsim_result(top='py_result'):
    tf = []
    edges = []
    paths = {}
    count = 0
    
    with open (top,'r') as fp:
        lines = fp.readlines()
        
        for l in lines:
            if re.match("Path between",l):
                    
                r = re.findall(r"(\d+) and (\d+)",l)
                s,d = int(r[0][0]),int(r[0][1])
                if s ==d :
                    count += 1
                tf.append((s,d))
                
                paths[(s,d)]=list()
            if re.match("Path\[",l):
                r = re.findall(r'(\d+)=>(\d+)',l)
                edg = int(r[0][0]),int(r[0][1])
                if edg[0] not in paths[(s,d)]:
                    paths[(s,d)].append(edg[0])
                
                if edg[1] not in paths[(s,d)]:
                    paths[(s,d)].append(edg[1])    
            
            if re.match("link:",l):
                r = re.findall(r"(\d+)->(\d+)",l)
                edg = int(r[0][0]),int(r[0][1])
     
                if edg in edges:
                    continue
    
                edges.append(edg)
                
    G = nx.Graph()                
    for edg in edges:
        G.add_edge(edg[0],edg[1],wight=1)

    return G,tf,edges,paths
